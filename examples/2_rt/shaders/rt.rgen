#version 460 core
#extension GL_EXT_ray_tracing : require

layout(set = 0, binding = 0) uniform accelerationStructureEXT topLevelAS;
layout(set = 0, binding = 1, rgba8) uniform image2D outImage;

layout(location = 0) rayPayloadEXT vec3 payload;

void main() {
    uvec2 launchID   = gl_LaunchIDEXT.xy;
    uvec2 launchSize = gl_LaunchSizeEXT.xy;

    // NDC in [-1,1], flip Y so image isn't upside-down
    vec2 uv = (vec2(launchID) + 0.5) / vec2(launchSize) * 2.0 - 1.0;
    uv.y = -uv.y;

    // simple pinhole camera
    vec3 origin = vec3(0.0, 0.0, 3.0);
    vec3 dir    = normalize(vec3(uv, -1.5));

    payload = vec3(0.0);

    traceRayEXT(
        topLevelAS,
        gl_RayFlagsOpaqueEXT,  // flags
        0xFF,                  // cullMask
        0,                     // sbtRecordOffset (raygen uses miss index 0 below)
        0,                     // sbtRecordStride
        0,                     // missIndex
        origin, 0.0,           // ray origin, tmin
        dir,    1e20,          // ray direction, tmax
        0                      // payload location (matches layout(location=0))
    );

    imageStore(outImage, ivec2(launchID), vec4(payload, 1.0));
}
